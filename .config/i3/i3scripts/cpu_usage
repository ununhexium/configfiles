#!/usr/bin/env bash

function show_usage() {

    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    source "$DIR/cpu_usage_location.sh"
    # cpu_usage=$(echo "scale=1 ; 100 - "$(mpstat 1 1 -o JSON | jq '.sysstat.hosts[0].statistics[0]."cpu-load"[0].idle') | bc)
    "$DIR/refresh_cpu_usage.sh" &
    cpu_usage=$(cat "$cpu_usage_location") || exit 1
    load=$(cat "/proc/loadavg" | cut -d' ' -f1)
    count=$(cat "/proc/cpuinfo" | grep processor | wc -l)
    
    high=$(echo "scale=1 ; $count / 2" | bc)
    warn=$(echo "scale=1 ; $count / 2 + $count / 4" | bc)
    crit=$count
    
    
    # Print short_text, full_text
    echo "$cpu_usage%"
    echo "H $high W $warn C $crit"
    
    # Print color, if needed
    [[ $(echo "$load > $crit" | bc -l) == 1 ]] && echo "#FF00FF" && exit 0
    [[ $(echo "$load > $warn" | bc -l) == 1 ]] && echo "#FFFF00" && exit 0
    [[ $(echo "$load > $high" | bc -l) == 1 ]] && echo "#00FFFF" && exit 0

}


case $BLOCK_BUTTON in
    1) 
        terminator -T cpu_usage_click -e "htop --sort-key PERCENT_CPU" &
        # Dirty hack to give time to terminator to start
        while [ -z "$ID" ]; do
            ID=$(xdotool search --name cpu_usage_click)
        done
        xdotool windowmove $ID $(expr $BLOCK_X - 500) 100
        xdotool windowsize $ID 1000 700

        # FIXME
        # give some time for the WM to focus the terminator window
        # sleep 0.5

        # Close htop cleanly
        xdotool search --name cpu_usage_click behave %@ blur windowfocus key F10
        xdotool keyup F10
#        while IFS= read -r line
#        do
#            echo "Line $line"
#            regex=".* id # 0x(.*)"
#            if [[ $line =~ $regex ]]
#            then
#                echo "Hex ${BASH_REMATCH[1]^^}"
#                id=$(echo "obase=10; ibase=16; ${BASH_REMATCH[1]^^}" | bc)
#                echo "Dec $id"
#                echo "Ref $ID"
#                if [ $id != $ID ]; then
#                    echo "Diff"
#                    xdotool windowclose $ID
#                    exit 0
#                fi
#            fi
#        done < <(xprop -spy -root _NET_ACTIVE_WINDOW)
        ;;
esac

show_usage


exit 0;

# POWERLEVEL9

POWERLEVEL9K_MODE="nerdfont-complete"

POWERLEVEL9K_LINUX_ICON=""
POWERLEVEL9K_HOME_SUB_ICON=""
POWERLEVEL9K_FOLDER_ICON=""

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_RPROMPT_ON_NEWLINE=false
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="%K{white}%k"
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%K{black}%F{cyan} \uf155%f%F{black} %k\ue0b0%f "
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon dir dir_writable vcs)

# Separators
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\ue0b0'
POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=$'\ue231'
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\ue0b2'
POWERLEVEL9K_RIGHT_SUBSEGMENT_SEPARATOR=$'\ue0b7'

# Context
DEFAULT_USER=$USER
POWERLEVEL9K_ALWAYS_SHOW_CONTEXT=true
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND='cyan'
POWERLEVEL9K_CONTEXT_TEMPLATE="%F{cyan}%n%f"
POWERLEVEL9K_CONTEXT_DEFAULT_BACKGROUND='black'

# Dirs
POWERLEVEL9K_DIR_HOME_BACKGROUND='white'
POWERLEVEL9K_DIR_HOME_FOREGROUND='black'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND='white'
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND='black'
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND='magenta'
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND='black'
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_from_right"
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="015"

# OS segment
POWERLEVEL9K_OS_ICON_BACKGROUND='black'

# VCS icons
POWERLEVEL9K_VCS_GIT_ICON=""
POWERLEVEL9K_VCS_GIT_GITHUB_ICON=""
POWERLEVEL9K_VCS_STAGED_ICON=$'\uf055'
POWERLEVEL9K_VCS_UNSTAGED_ICON=$'\uf421'
POWERLEVEL9K_VCS_UNTRACKED_ICON=$'\uf00d'
POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON=$'\uf0ab '
POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON=$'\uf0aa '

# VCS colours
POWERLEVEL9K_VCS_MODIFIED_BACKGROUND='black'
POWERLEVEL9K_VCS_MODIFIED_FOREGROUND='red'
POWERLEVEL9K_VCS_UNTRACKED_BACKGROUND='black'
POWERLEVEL9K_VCS_UNTRACKED_FOREGROUND='yellow'
POWERLEVEL9K_VCS_CLEAN_BACKGROUND='black'
POWERLEVEL9K_VCS_CLEAN_FOREGROUND='cyan'

# VCS config
POWERLEVEL9K_SHOW_CHANGESET=false

# Status
POWERLEVEL9K_OK_ICON="%F{cyan}"
POWERLEVEL9K_FAIL_ICON=""
POWERLEVEL9K_CARRIAGE_RETURN_ICON=""

# Battery
POWERLEVEL9K_BATTERY_LOW_FOREGROUND='red'
POWERLEVEL9K_BATTERY_CHARGING_FOREGROUND='yellow'
POWERLEVEL9K_BATTERY_CHARGED_FOREGROUND='green'
POWERLEVEL9K_BATTERY_DISCONNECTED_FOREGROUND='blue'

# Time
POWERLEVEL9K_TIME_FORMAT="%F{black}\uf017 %D{%I:%M}%f"
POWERLEVEL9K_TIME_BACKGROUND='cyan'
POWERLEVEL9K_TIME_FORMAT='%D{%H:%M:%S}'

# Runtime
POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=2
POWERLEVEL9K_COMMAND_EXECUTION_TIME_PRECISION=1

# ANTIGEN

antigen use oh-my-zsh


POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k

POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status root_indicator background_jobs virtualenv command_execution_time battery load)

#Load
POWERLEVEL9K_LOAD_WHICH=1
POWERLEVEL9K_LOAD_CRITICAL_BACKGROUND="black"
POWERLEVEL9K_LOAD_CRITICAL_FOREGROUND="magenta"
POWERLEVEL9K_LOAD_WARNING_BACKGROUND="black"
POWERLEVEL9K_LOAD_WARNING_FOREGROUND="cyan"
POWERLEVEL9K_LOAD_NORMAL_BACKGROUND="black"
POWERLEVEL9K_LOAD_NORMAL_FOREGROUND="white"

antigen theme bhilburn/powerlevel9k powerlevel9k

# GENERAL PATH

export PATH="$PATH:$HOME/.local/bin:$HOME/.local/scripts"

# ANTIGEN
antigen bundle "greymd/docker-zsh-completion"
antigen bundle "MenkeTechnologies/zsh-cargo-completion"


#zstyle ':completion:*:mvn:*' show-all-phases true
zstyle ':completion:*:manuals'    separate-sections true
zstyle ':completion:*:manuals.*'  insert-sections   true
zstyle ':completion:*:man:*'      menu yes select

antigen apply


if [ -f /usr/share/powerline/bindings/zsh/powerline.zsh ]; then
	source /usr/share/powerline/bindings/zsh/powerline.zsh
fi

export TMP=/tmp/$USER
if [ ! -d "$TMP" ]; then mkdir "$TMP"; fi

# GIT
export LESS="-j.5 -R --hilite-unread"

# network interface to consider for speedometer
IFACE=enp4s0

# COMPLETION
## Gradle
fpath=(/home/uuh/.zsh/gradle-completion $fpath)

## custom
fpath=(~/.local/scripts/completion $fpath)

# FUCK IT! >_<
fuck () {
    TF_PYTHONIOENCODING=$PYTHONIOENCODING;
    export TF_SHELL=zsh;
    export TF_ALIAS=fuck;
    TF_SHELL_ALIASES=$(alias);
    export TF_SHELL_ALIASES;
    TF_HISTORY="$(fc -ln -10)";
    export TF_HISTORY;
    export PYTHONIOENCODING=utf-8;
    TF_CMD=$(
        thefuck THEFUCK_ARGUMENT_PLACEHOLDER $@
    ) && eval $TF_CMD;
    unset TF_HISTORY;
    export PYTHONIOENCODING=$TF_PYTHONIOENCODING;
    test -n "$TF_CMD" && print -s $TF_CMD
}


alias ai='aptinstall'
alias click="xdg-open"
alias cg='cyberghostvpn'
alias dip="docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'"
alias df="df -hl"
alias f="fuck"
alias feh="feh --fullscreen --auto-zoom"
alias g="git"
alias ikotlin="kotlinc-jvm"
alias listwifi="iwlist wlp2s0 scan"
alias la="lsd --long --all --icon never --"
alias l="lsd --long --all --icon never --"
alias ll=l
alias mt=milkytracker
alias mvnw="./mvnw"
alias mkvirtualenv3="mkvirtualenv --python=/usr/bin/python3"
alias pipsi="python3 -m pipsi --home $WORKON_HOME"
alias pomodoro='while true; do notify-send Pomodoro Resume; sleep 1500; notify-send --urgency critical --expire-time 300000 Pomodoro Pause; done'
alias rlf='readlink -f'
alias sarahconnor="cd $PWD"
alias speedometer="speedometer -r $IFACE -t $IFACE"
alias wttr='curl wttr.in/-20.895719,55.565747'
alias zu="vi $HOME/.zshrc.user"

setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# Allows for item negation in command. For instance, delete all but foo: "rm ^foo"
# setopt extended_glob 


#MDV set theme
export MDV_THEME="884.0134"

function dgo {
    ranger --choosedir=/tmp/dirselection
    cd $(cat /tmp/dirselection)
}

function echopath() {
	echo $PATH | sed -e "s/:/\n/g"
}

function cdgopro {
    selection=$(ls "/run/user/$UID/gvfs/" | fzf)
    cd "/run/user/$UID/gvfs/$selection/GoPro MTP Client Disk Volume/DCIM/100GOPRO"
}



# FZF

FZF_CTRL_R_OPTS="--preview='echo {} | fold --spaces --width=\$FZF_PREVIEW_COLUMNS'"

# zsh-fzf-history-search
zinit ice lucid wait'0'
zinit light joshskidmore/zsh-fzf-history-search

#move to git repo
function ggo {
    cd $(fzf_ggo)
}



# HISTORY
export HISTSIZE=100000

# Multiscreen
PATH="$PATH:$HOME/.screenlayout"

## PERL

PATH="/home/uuh/perl5/bin${PATH:+:${PATH}}"; export PATH;
PERL5LIB="/home/uuh/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/uuh/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/uuh/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/uuh/perl5"; export PERL_MM_OPT;

# GO
PATH="$PATH:$HOME/go/bin/"

# NPM, NVM, Node JS

NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$PATH:$NPM_PACKAGES/bin"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion



# ANDROID

export ANDROID_HOME="$HOME/Android/Sdk"
export ANDROID_SDK_ROOT="$HOME/Android/Sdk"
export PATH="$PATH:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools"



# BRYTER

export PATH="$PATH:$HOME/.local/bin/bryter"
export BASEURL="http://localhost:8080"

function b(){
    bryter "$@"
}



# Cargo

PATH="$PATH:$HOME/.cargo/bin"



# DFinity

export PATH="$PATH:/home/uuh/app/dfx"
export DFX_INSTALL_ROOT="$HOME/app/dfx"


# FLUTTER

export PATH="$PATH:$HOME/app/flutter/current/bin"


# JAVA

plugins=(ripgrep zsh-sdkman)

# SDK Man
source "$HOME/.sdkman/bin/sdkman-init.sh"

# KScript
export KSCRIPT_IDEA_COMMAND="$HOME/.local/bin/idea.sh"

# Idea
export PATH="$PATH:$HOME/app/idea/current/bin"


# NEXUS

function Nexus(){
    current=$(sdk current | grep java | cut -d' ' -f2)
    echo "$current" | grep '8\.0'
    if [[ $? -eq 0 ]]; then
        nexus "$@"
    else
        sdk use java '8.0.302-open'
        nexus "$@"
        sdk use java "$current"
    fi
}


# PYTHON

# Virtualenv
export WORKON_HOME="$HOME/.virtualenvs"
VENV_WRAPPER_FILE='/usr/share/virtualenvwrapper/virtualenvwrapper.sh'
if [ -f "$VENV_WRAPPER_FILE" ]; then
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
else
    echo "Can't find virtual env wrapper file at $VENV_WRAPPER_FILE"
fi
# source "$HOME/.local/bin/virtualenvwrapper_lazy.sh"



# ZSH
source /home/uuh/dev/zsh-users/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


